package com.flipfit.client;

import com.flipfit.bean.FlipFitGym;
import com.flipfit.bean.FlipFitGymOwner;
import com.flipfit.bean.FlipFitSlot;
import com.flipfit.business.FlipFitGymOwnerService;
import com.flipfit.business.FlipFitGymOwnerServiceImpl;
import com.flipfit.constant.ColorConstants;

import java.util.Scanner;

public class FlipFitGymOwnerMenu {

    FlipFitGymOwnerService flipFitGymOwnerService = new FlipFitGymOwnerServiceImpl();

    public void getGymOwnerMenu() {
        Scanner input = new Scanner(System.in);
        int choice;

        do {
            System.out.println(ColorConstants.CYAN + """
            ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
            ‚ïë           üè¢ GYM OWNER DASHBOARD           ‚ïë
            ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
            ‚ïë  1 ‚Üí ‚ûï Add Gym                            ‚ïë
            ‚ïë  2 ‚Üí üèãÔ∏è  View Gyms                         ‚ïë
            ‚ïë  3 ‚Üí ‚ûï Add Slot                           ‚ïë
            ‚ïë  4 ‚Üí üóëÔ∏è  Delete Slot                       ‚ïë
            ‚ïë  5 ‚Üí üìñ View Bookings                      ‚ïë
            ‚ïë  6 ‚Üí üëÅÔ∏è  View Profile                      ‚ïë
            ‚ïë  7 ‚Üí ‚úèÔ∏è  Edit Profile                      ‚ïë
            ‚ïë  8 ‚Üí üí≥ View Payments                      ‚ïë 
            ‚ïë  9 ->  üóëÔ∏è Delete Gym                       ‚ïë
            ‚ïë  10 ‚Üí üìñ View Slots by GymId               ‚ïë
            ‚ïë  11 ‚Üí üîì Logout                            ‚ïë
            ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
            """ + ColorConstants.RESET);

            System.out.print(ColorConstants.GREEN + "Enter your choice:> " + ColorConstants.RESET);
            choice = input.nextInt();

            switch (choice) {
                case 1 -> {
                    System.out.println("‚ûï Adding a new gym...");
                    Scanner scanner = new Scanner(System.in);

                    System.out.print("Enter Gym Owner ID: ");
                    int gymOwnerID = scanner.nextInt();
                    scanner.nextLine(); // consume newline

                    System.out.print("Enter Gym Address: ");
                    String address = scanner.nextLine();

                    System.out.print("Enter Pin Code: ");
                    String pinCode = scanner.nextLine();

                    System.out.print("Enter Gym Description: ");
                    String description = scanner.nextLine();

                    FlipFitGym newGym = new FlipFitGym();
                    newGym.setGymOwnerID(gymOwnerID);
                    newGym.setAddress(address);
                    newGym.setPinCode(pinCode);
                    newGym.setDescription(description);
                    newGym.setApproved(false);

                    flipFitGymOwnerService.addGym(newGym);

                }
                case 2 -> {

                    System.out.println("Enter your Gym Owner Id : ");
                    int id = input.nextInt();

                    System.out.println("üèãÔ∏è Viewing your gyms...");
                    System.out.println(flipFitGymOwnerService.viewGyms(id));
                }
                case 3 -> {
                    System.out.println("‚ûï Adding a new slot...");
                    Scanner scanner = new Scanner(System.in);

                    System.out.print("üèãÔ∏è Enter Gym ID: ");
                    int gymId = scanner.nextInt();

                    System.out.print("‚è∞ Enter Start Time (e.g., 900 for 9:00 AM): ");
                    int startTime = scanner.nextInt();

                    System.out.print("üí∫ Enter Total Seats: ");
                    int totalSeats = scanner.nextInt();

                    System.out.print("ü™ë Enter Seats Available: ");
                    int seatsAvailable = scanner.nextInt();


                    FlipFitSlot newSlot = new FlipFitSlot();
                    newSlot.setGymId(gymId);
                    newSlot.setStartTime(startTime);
                    newSlot.setTotalSeats(totalSeats);
                    newSlot.setSeatsAvailable(seatsAvailable);


                    flipFitGymOwnerService.addSlot(newSlot);
                    System.out.println("‚úÖ Slot added successfully!");
                    System.out.println(newSlot);

                }
                case 4 -> {
                    System.out.println("üóëÔ∏è Deleting a slot...");
                    Scanner scanner = new Scanner(System.in);

                    System.out.print("‚è∞ Enter Slot ID: ");
                    int slotId = scanner.nextInt();

                    boolean deleted = flipFitGymOwnerService.deleteSlot(slotId);

                    if (deleted) {
                        System.out.println(ColorConstants.GREEN + "‚úÖ Slot deleted successfully!" + ColorConstants.RESET);
                    } else {
                        System.out.println(ColorConstants.RED + "‚ùå Slot not found or could not be deleted." + ColorConstants.RESET);
                    }

                }
                case 5 -> {
                    System.out.println("üìñ Viewing bookings...");

                }
                case 6 -> {

                    System.out.println("Enter Gym Owner Id : ");
                    int id = input.nextInt();

                    System.out.println("üëÅÔ∏è Viewing your profile...");
                    System.out.println(flipFitGymOwnerService.viewDetails(id));

                }
                case 7 -> {
                    System.out.println("‚úèÔ∏è Editing GymOwner profile...");
                    Scanner scanner = new Scanner(System.in);

                    System.out.print("üÜî Enter your GymOwner ID: ");
                    int ownerId = scanner.nextInt();
                    scanner.nextLine(); // consume newline

                    FlipFitGymOwner gymOwner = flipFitGymOwnerService.viewDetails(ownerId);

                    if (gymOwner == null) {
                        System.out.println(ColorConstants.RED + "‚ùå No GymOwner found with ID: " + ownerId + ColorConstants.RESET);
                        break;
                    }

                    System.out.println(ColorConstants.YELLOW + "üìù Leave field blank to keep current value." + ColorConstants.RESET);

                    System.out.print("üë§ New Name (" + gymOwner.getUsername() + "): ");
                    String name = scanner.nextLine();
                    if (!name.isBlank()) gymOwner.setUsername(name);

                    System.out.print("üìß New Email (" + gymOwner.getEmail() + "): ");
                    String email = scanner.nextLine();
                    if (!email.isBlank()) gymOwner.setEmail(email);

                    System.out.print("üì± New Phone Number (" + gymOwner.getPhoneNumber() + "): ");
                    String phone = scanner.nextLine();
                    if (!phone.isBlank()) gymOwner.setPhoneNumber(phone);


                    System.out.print("üìç New City (" + gymOwner.getCity() + "): ");
                    String location = scanner.nextLine();
                    if (!location.isBlank()) gymOwner.setCity(location);

                    flipFitGymOwnerService.editDetails(gymOwner);
                    System.out.println(ColorConstants.GREEN + "‚úÖ GymOwner profile updated successfully!" + ColorConstants.RESET);
                    System.out.println(gymOwner);
                }
                case 8 -> {
                    System.out.println("üí≥ Viewing payments...");

                }
                case 9 -> {
                    System.out.println("üí≥ Deleting Gym...");

                    System.out.println("Enter Gym Id :");
                    int gymId = input.nextInt();


                    boolean deleted = flipFitGymOwnerService.deleteGym(gymId);

                    if (deleted) {
                        System.out.println(ColorConstants.GREEN + "‚úÖ Gym deleted successfully!" + ColorConstants.RESET);
                    } else {
                        System.out.println(ColorConstants.RED + "‚ùå Gym not found or could not be deleted." + ColorConstants.RESET);
                    }

                }
                case 10 -> {
                    System.out.println(ColorConstants.YELLOW + "üìñ Viewing Slots..." + ColorConstants.RESET);

                    System.out.println("Enter Gym Id : ");
                    int id = input.nextInt();

                    System.out.println(flipFitGymOwnerService.viewSlots(id));
                }
                case 11 -> {
                    System.out.println(ColorConstants.YELLOW + "üîì Logging out... Stay fit!" + ColorConstants.RESET);
                }
                default -> {
                    System.out.println(ColorConstants.RED + "‚ùó Invalid choice. Please select a valid option." + ColorConstants.RESET);
                }
            }

        } while (choice != 11);
    }
}
